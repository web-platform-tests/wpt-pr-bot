GET /repos/web-platform-tests/wpt/pulls/19538/files
accept: application/vnd.github.v3+json

HTTP/1.1 200 OK
date: Sat, 30 Nov 2019 14:02:01 GMT
content-type: application/json; charset=utf-8
content-length: 15770
connection: close
server: GitHub.com
status: 200 OK
x-ratelimit-limit: 5000
x-ratelimit-remaining: 4983
x-ratelimit-reset: 1575126120
cache-control: private, max-age=60, s-maxage=60
vary: Accept, Authorization, Cookie, X-GitHub-OTP, Accept-Encoding
etag: "a2b3b2a2300eac263607d50730596162"
last-modified: Sun, 20 Oct 2019 07:35:53 GMT
x-oauth-scopes: public_repo
x-accepted-oauth-scopes: 
x-github-media-type: github.v3; param=black-cat-preview; format=json
access-control-expose-headers: ETag, Link, Location, Retry-After, X-GitHub-OTP, X-RateLimit-Limit, X-RateLimit-Remaining, X-RateLimit-Reset, X-OAuth-Scopes, X-Accepted-OAuth-Scopes, X-Poll-Interval, X-GitHub-Media-Type
access-control-allow-origin: *
strict-transport-security: max-age=31536000; includeSubdomains; preload
x-frame-options: deny
x-content-type-options: nosniff
x-xss-protection: 1; mode=block
referrer-policy: origin-when-cross-origin, strict-origin-when-cross-origin
content-security-policy: default-src 'none'
x-github-request-id: BF00:1E5ED:9404003:B070832:5DE27658

[{"sha":"1c9df6ebb5ce5d3deb0a935ff6b2a3bdaa7ee1a4","filename":"lint.whitelist","status":"modified","additions":1,"deletions":0,"changes":1,"blob_url":"https://github.com/web-platform-tests/wpt/blob/138e810c95b8ebb88bd69e74764b9d93b6ca24c1/lint.whitelist","raw_url":"https://github.com/web-platform-tests/wpt/raw/138e810c95b8ebb88bd69e74764b9d93b6ca24c1/lint.whitelist","contents_url":"https://api.github.com/repos/web-platform-tests/wpt/contents/lint.whitelist?ref=138e810c95b8ebb88bd69e74764b9d93b6ca24c1","patch":"@@ -814,6 +814,7 @@ LAYOUTTESTS APIS: import-maps/resources/jest-test-helper.js\n LAYOUTTESTS APIS: permissions/test-background-fetch-permission.html\n LAYOUTTESTS APIS: resources/chromium/generic_sensor_mocks.js\n LAYOUTTESTS APIS: resources/chromium/webxr-test.js\n+LAYOUTTESTS APIS: media-source/mediasource-video-is-visible.html\n \n # Signed Exchange files have hard-coded URLs in the certUrl field\n WEB-PLATFORM.TEST:signed-exchange/resources/*.sxg"},{"sha":"a96170050729d256f4909392225854ccd7b362c3","filename":"media-source/mediasource-video-is-visible-expected.html","status":"added","additions":36,"deletions":0,"changes":36,"blob_url":"https://github.com/web-platform-tests/wpt/blob/138e810c95b8ebb88bd69e74764b9d93b6ca24c1/media-source/mediasource-video-is-visible-expected.html","raw_url":"https://github.com/web-platform-tests/wpt/raw/138e810c95b8ebb88bd69e74764b9d93b6ca24c1/media-source/mediasource-video-is-visible-expected.html","contents_url":"https://api.github.com/repos/web-platform-tests/wpt/contents/media-source/mediasource-video-is-visible-expected.html?ref=138e810c95b8ebb88bd69e74764b9d93b6ca24c1","patch":"@@ -0,0 +1,36 @@\n+<!DOCTYPE html>\n+<html lang=\"en\">\n+<head>\n+    <meta charset=\"UTF-8\">\n+    <title>HTML MSE test: video is shown</title>\n+    <link rel=\"author\" title=\"Alicia Boya García\" href=\"mailto:aboya@igalia.com\">\n+    <style>\n+        html, body {\n+            margin: 0;\n+            padding: 0;\n+            overflow: hidden;\n+            background: white;\n+        }\n+        body {\n+            position: absolute;\n+            top: 0;\n+            bottom: 0;\n+            left: 0;\n+            right: 0;\n+        }\n+        #video {\n+            width: 320px;\n+            height: 240px;\n+            background: blue;\n+        }\n+        #explanation {\n+            position: absolute;\n+            top: 260px;\n+        }\n+    </style>\n+</head>\n+<body>\n+<div id=\"video\"></div>\n+<div id=\"explanation\">A video containing a blue static image should be visible above.</div>\n+</body>\n+</html>\n\\ No newline at end of file"},{"sha":"9f38cfdd64c1e831c7659b66220846b8ba246e8e","filename":"media-source/mediasource-video-is-visible.html","status":"added","additions":159,"deletions":0,"changes":159,"blob_url":"https://github.com/web-platform-tests/wpt/blob/138e810c95b8ebb88bd69e74764b9d93b6ca24c1/media-source/mediasource-video-is-visible.html","raw_url":"https://github.com/web-platform-tests/wpt/raw/138e810c95b8ebb88bd69e74764b9d93b6ca24c1/media-source/mediasource-video-is-visible.html","contents_url":"https://api.github.com/repos/web-platform-tests/wpt/contents/media-source/mediasource-video-is-visible.html?ref=138e810c95b8ebb88bd69e74764b9d93b6ca24c1","patch":"@@ -0,0 +1,159 @@\n+<!DOCTYPE html>\n+<html lang=\"en\" class=\"reftest-wait\">\n+<head>\n+    <meta charset=\"UTF-8\">\n+    <title>HTML MSE test: video is shown</title>\n+    <link rel=\"author\" title=\"Alicia Boya García\" href=\"mailto:aboya@igalia.com\">\n+    <link rel=\"match\" href=\"mediasource-video-is-visible-expected.html\">\n+    <meta name=\"fuzzy\" content=\"maxDifference=30;totalPixels=76800\">\n+    <meta name=\"assert\" content=\"Video is rendered in the MSE player.\">\n+    <style>\n+        html, body {\n+            margin: 0;\n+            padding: 0;\n+            overflow: hidden;\n+            background: white;\n+        }\n+        body {\n+            position: absolute;\n+            top: 0;\n+            bottom: 0;\n+            left: 0;\n+            right: 0;\n+        }\n+        #video {\n+            width: 320px;\n+            height: 240px;\n+        }\n+        #explanation {\n+            position: absolute;\n+            top: 260px;\n+        }\n+    </style>\n+</head>\n+<body>\n+<video id=\"video\"></video>\n+<div id=\"explanation\">A video containing a blue static image should be visible above.</div>\n+<script>\n+    if (\"testRunner\" in window)\n+        // WebKit reftests use a different mechanism for delaying the test finish.\n+        testRunner.waitUntilDone();\n+\n+    const mediaElement = document.getElementById(\"video\");\n+\n+    class NetworkError extends Error {\n+        constructor(message) {\n+            super(message);\n+        }\n+    }\n+\n+    function requestJSON(url) {\n+        return new Promise((resolve, reject) => {\n+            const xhr = new XMLHttpRequest();\n+            xhr.open(\"GET\", url, true);\n+            xhr.responseType = \"text\";\n+            xhr.onreadystatechange = () => {\n+                if (xhr.readyState === 4) {\n+                    if (xhr.status >= 200 && xhr.status < 300) {\n+                        resolve(JSON.parse(xhr.responseText));\n+                    } else {\n+                        reject(new NetworkError(`Error ${xhr.status}`));\n+                    }\n+                }\n+            };\n+            xhr.send(null);\n+        });\n+    }\n+\n+    function requestBinaryMedia(url) {\n+        return new Promise((resolve, reject) => {\n+            const xhr = new XMLHttpRequest();\n+            xhr.open(\"GET\", url, true);\n+            xhr.responseType = \"arraybuffer\";\n+            xhr.onreadystatechange = () => {\n+                if (xhr.readyState === 4) {\n+                    if (xhr.status >= 200 && xhr.status < 300) {\n+                        resolve(xhr.response);\n+                    } else {\n+                        reject(new NetworkError(`Error ${xhr.status}`));\n+                    }\n+                }\n+            };\n+            xhr.send(null);\n+        })\n+    }\n+\n+    function waitForEvent(element, eventName) {\n+        return new Promise(resolve => {\n+            element.addEventListener(eventName, function handler() {\n+                element.removeEventListener(eventName, handler);\n+                resolve();\n+            })\n+        });\n+    }\n+\n+    function waitForAppend(sourceBuffer, data) {\n+        return new Promise(resolve => {\n+            const listener = () => {\n+                sourceBuffer.removeEventListener(\"update\", listener);\n+                resolve();\n+            };\n+            sourceBuffer.addEventListener(\"update\", listener);\n+            sourceBuffer.appendBuffer(data);\n+        });\n+    }\n+\n+    let mediaSource;\n+    let audioSB;\n+    let videoSB;\n+\n+    async function main(audioType, audioUrl, videoType, videoUrl) {\n+        const audioManifest = await requestJSON(audioUrl);\n+        const videoManifest = await requestJSON(videoUrl);\n+        const audioData = await requestBinaryMedia(audioManifest.url);\n+        const videoData = await requestBinaryMedia(videoManifest.url);\n+\n+        mediaSource = new MediaSource();\n+        mediaElement.src = window.URL.createObjectURL(mediaSource);\n+        mediaElement.volume = 0.1;\n+        await waitForEvent(mediaSource, \"sourceopen\");\n+\n+        audioSB = mediaSource.addSourceBuffer(audioType);\n+        videoSB = mediaSource.addSourceBuffer(videoType);\n+\n+        await waitForAppend(audioSB, audioData.slice(0, audioManifest.init.size));\n+        await waitForAppend(videoSB, videoData.slice(0, videoManifest.init.size));\n+\n+        await waitForAppend(audioSB, audioData.slice(audioManifest.init.size));\n+        await waitForAppend(videoSB, videoData.slice(videoManifest.init.size));\n+\n+        mediaSource.endOfStream();\n+        mediaElement.play();\n+        await waitForEvent(mediaElement, \"ended\");\n+\n+        if (\"testRunner\" in window)\n+            testRunner.notifyDone();\n+        document.documentElement.classList.remove(\"reftest-wait\");\n+    }\n+\n+    function selectAlternative(alternatives) {\n+        for (let alternative of alternatives) {\n+            if (MediaSource.isTypeSupported(alternative.mimeType))\n+                return [alternative.mimeType, alternative.url];\n+        }\n+        throw new Error(\"Could not find suitable alternative\");\n+    }\n+\n+    const [audioType, audioUrl] = selectAlternative([\n+        {mimeType: 'audio/mp4; codecs=\"mp4a.40.2\"', url: \"mp4/test-a-1s.mp4-manifest.json\"},\n+        {mimeType: 'audio/webm; codecs=\"opus\"', url: \"webm/test-a-1s.webm-manifest.json\"},\n+    ]);\n+    const [videoType, videoUrl] = selectAlternative([\n+        {mimeType: 'video/mp4; codecs=\"avc1.42C015\"', url: \"mp4/test-v-1s-blue.mp4-manifest.json\"},\n+        {mimeType: 'video/webm; codecs=\"vp9\"', url: \"webm/test-v-1s-blue.webm-manifest.json\"},\n+    ]);\n+\n+    main(audioType, audioUrl, videoType, videoUrl);\n+</script>\n+</body>\n+</html>\n\\ No newline at end of file"},{"sha":"347971929b5842390cbd11176afb583d92d978bd","filename":"media-source/mp4/test-a-1s.mp4","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/web-platform-tests/wpt/blob/138e810c95b8ebb88bd69e74764b9d93b6ca24c1/media-source/mp4/test-a-1s.mp4","raw_url":"https://github.com/web-platform-tests/wpt/raw/138e810c95b8ebb88bd69e74764b9d93b6ca24c1/media-source/mp4/test-a-1s.mp4","contents_url":"https://api.github.com/repos/web-platform-tests/wpt/contents/media-source/mp4/test-a-1s.mp4?ref=138e810c95b8ebb88bd69e74764b9d93b6ca24c1"},{"sha":"43785c0e8cf3e2b97237e73b36538b1f0ad98eb8","filename":"media-source/mp4/test-a-1s.mp4-manifest.json","status":"added","additions":24,"deletions":0,"changes":24,"blob_url":"https://github.com/web-platform-tests/wpt/blob/138e810c95b8ebb88bd69e74764b9d93b6ca24c1/media-source/mp4/test-a-1s.mp4-manifest.json","raw_url":"https://github.com/web-platform-tests/wpt/raw/138e810c95b8ebb88bd69e74764b9d93b6ca24c1/media-source/mp4/test-a-1s.mp4-manifest.json","contents_url":"https://api.github.com/repos/web-platform-tests/wpt/contents/media-source/mp4/test-a-1s.mp4-manifest.json?ref=138e810c95b8ebb88bd69e74764b9d93b6ca24c1","patch":"@@ -0,0 +1,24 @@\n+{\n+    \"url\": \"mp4/test-a-1s.mp4\",\n+    \"init\": {\n+        \"offset\": 0,\n+        \"size\": 942\n+    },\n+    \"media\": [\n+        {\n+            \"offset\": 942,\n+            \"size\": 4067,\n+            \"timestamp\": 0.0\n+        },\n+        {\n+            \"offset\": 5009,\n+            \"size\": 3624,\n+            \"timestamp\": 0.5108390022675737\n+        },\n+        {\n+            \"offset\": 8633,\n+            \"size\": 570,\n+            \"timestamp\": 0.9984580498866213\n+        }\n+    ]\n+}\n\\ No newline at end of file"},{"sha":"569692b565743d5326bd2c15f1996bf18207b939","filename":"media-source/mp4/test-v-1s-blue.mp4","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/web-platform-tests/wpt/blob/138e810c95b8ebb88bd69e74764b9d93b6ca24c1/media-source/mp4/test-v-1s-blue.mp4","raw_url":"https://github.com/web-platform-tests/wpt/raw/138e810c95b8ebb88bd69e74764b9d93b6ca24c1/media-source/mp4/test-v-1s-blue.mp4","contents_url":"https://api.github.com/repos/web-platform-tests/wpt/contents/media-source/mp4/test-v-1s-blue.mp4?ref=138e810c95b8ebb88bd69e74764b9d93b6ca24c1"},{"sha":"7c3635f49a369b887c22b5a3b67f80f195e62b0d","filename":"media-source/mp4/test-v-1s-blue.mp4-manifest.json","status":"added","additions":19,"deletions":0,"changes":19,"blob_url":"https://github.com/web-platform-tests/wpt/blob/138e810c95b8ebb88bd69e74764b9d93b6ca24c1/media-source/mp4/test-v-1s-blue.mp4-manifest.json","raw_url":"https://github.com/web-platform-tests/wpt/raw/138e810c95b8ebb88bd69e74764b9d93b6ca24c1/media-source/mp4/test-v-1s-blue.mp4-manifest.json","contents_url":"https://api.github.com/repos/web-platform-tests/wpt/contents/media-source/mp4/test-v-1s-blue.mp4-manifest.json?ref=138e810c95b8ebb88bd69e74764b9d93b6ca24c1","patch":"@@ -0,0 +1,19 @@\n+{\n+    \"url\": \"mp4/test-v-1s-blue.mp4\",\n+    \"init\": {\n+        \"offset\": 0,\n+        \"size\": 1053\n+    },\n+    \"media\": [\n+        {\n+            \"offset\": 1053,\n+            \"size\": 1392,\n+            \"timestamp\": 0.0\n+        },\n+        {\n+            \"offset\": 2445,\n+            \"size\": 351,\n+            \"timestamp\": 0.5\n+        }\n+    ]\n+}\n\\ No newline at end of file"},{"sha":"8e050812f0adb5b2a5e0f305768074f68976a0ee","filename":"media-source/webm/test-a-1s.webm","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/web-platform-tests/wpt/blob/138e810c95b8ebb88bd69e74764b9d93b6ca24c1/media-source/webm/test-a-1s.webm","raw_url":"https://github.com/web-platform-tests/wpt/raw/138e810c95b8ebb88bd69e74764b9d93b6ca24c1/media-source/webm/test-a-1s.webm","contents_url":"https://api.github.com/repos/web-platform-tests/wpt/contents/media-source/webm/test-a-1s.webm?ref=138e810c95b8ebb88bd69e74764b9d93b6ca24c1"},{"sha":"801246ee406245b30e1eaad0cb0d9702285cad4f","filename":"media-source/webm/test-a-1s.webm-manifest.json","status":"added","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/web-platform-tests/wpt/blob/138e810c95b8ebb88bd69e74764b9d93b6ca24c1/media-source/webm/test-a-1s.webm-manifest.json","raw_url":"https://github.com/web-platform-tests/wpt/raw/138e810c95b8ebb88bd69e74764b9d93b6ca24c1/media-source/webm/test-a-1s.webm-manifest.json","contents_url":"https://api.github.com/repos/web-platform-tests/wpt/contents/media-source/webm/test-a-1s.webm-manifest.json?ref=138e810c95b8ebb88bd69e74764b9d93b6ca24c1","patch":"@@ -0,0 +1,14 @@\n+{\n+    \"url\": \"webm/test-a-1s.webm\",\n+    \"init\": {\n+        \"offset\": 0,\n+        \"size\": 600\n+    },\n+    \"media\": [\n+        {\n+            \"offset\": 600,\n+            \"size\": 7880,\n+            \"timestamp\": 0.0\n+        }\n+    ]\n+}\n\\ No newline at end of file"},{"sha":"4efb5f8b83187672fe37a934cc0f80d7817213c7","filename":"media-source/webm/test-v-1s-blue.webm","status":"added","additions":0,"deletions":0,"changes":0,"blob_url":"https://github.com/web-platform-tests/wpt/blob/138e810c95b8ebb88bd69e74764b9d93b6ca24c1/media-source/webm/test-v-1s-blue.webm","raw_url":"https://github.com/web-platform-tests/wpt/raw/138e810c95b8ebb88bd69e74764b9d93b6ca24c1/media-source/webm/test-v-1s-blue.webm","contents_url":"https://api.github.com/repos/web-platform-tests/wpt/contents/media-source/webm/test-v-1s-blue.webm?ref=138e810c95b8ebb88bd69e74764b9d93b6ca24c1"},{"sha":"472e4b216d5de008e4aac7c2f187921c26fc62e9","filename":"media-source/webm/test-v-1s-blue.webm-manifest.json","status":"added","additions":14,"deletions":0,"changes":14,"blob_url":"https://github.com/web-platform-tests/wpt/blob/138e810c95b8ebb88bd69e74764b9d93b6ca24c1/media-source/webm/test-v-1s-blue.webm-manifest.json","raw_url":"https://github.com/web-platform-tests/wpt/raw/138e810c95b8ebb88bd69e74764b9d93b6ca24c1/media-source/webm/test-v-1s-blue.webm-manifest.json","contents_url":"https://api.github.com/repos/web-platform-tests/wpt/contents/media-source/webm/test-v-1s-blue.webm-manifest.json?ref=138e810c95b8ebb88bd69e74764b9d93b6ca24c1","patch":"@@ -0,0 +1,14 @@\n+{\n+    \"url\": \"webm/test-v-1s-blue.webm\",\n+    \"init\": {\n+        \"offset\": 0,\n+        \"size\": 580\n+    },\n+    \"media\": [\n+        {\n+            \"offset\": 580,\n+            \"size\": 766,\n+            \"timestamp\": 0.0\n+        }\n+    ]\n+}\n\\ No newline at end of file"}]